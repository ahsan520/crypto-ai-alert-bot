#!/usr/bin/env python3
import streamlit as st
import json
import os
import glob

st.set_page_config(page_title="Crypto AI Hybrid v13 Dashboard", layout="wide")

st.title("üìä Crypto AI Hybrid v13 Dashboard (Placeholder)")

# ------------------------------------------------------------
# ‚úÖ Load Configuration
# ------------------------------------------------------------
config_path = "config.json"
if os.path.exists(config_path):
    with open(config_path, "r") as f:
        cfg = json.load(f)
    st.sidebar.header("‚öôÔ∏è Configuration")
    st.sidebar.json(cfg)
    symbols = cfg.get("symbols", [])
else:
    st.error("‚ùå config.json not found")
    symbols = []

# ------------------------------------------------------------
# ‚úÖ Telemetry Viewer Section
# ------------------------------------------------------------
st.subheader("üì° Recent Telemetry Data")

telemetry_dir = "telemetry_logs"
if not os.path.exists(telemetry_dir):
    st.warning("‚ö†Ô∏è telemetry_logs/ directory not found.")
else:
    for symbol in symbols:
        st.markdown(f"### {symbol}")
        files = sorted(
            glob.glob(os.path.join(telemetry_dir, f"{symbol}_*.json")),
            key=os.path.getmtime,
            reverse=True,
        )

        if not files:
            st.info(f"No telemetry logs found for {symbol}.")
            continue

        # Show up to 3 recent telemetry files
        for fp in files[:3]:
            try:
                with open(fp, "r") as f:
                    data = json.load(f)
                with st.expander(f"üïí {data.get('timestamp_utc', os.path.basename(fp))}"):
                    st.json(data)
            except Exception as e:
                st.error(f"Error loading {fp}: {e}")

st.caption("Telemetry data auto-generated by `crypto_ai_alert_v10.py` and stored under `telemetry_logs/`.")
