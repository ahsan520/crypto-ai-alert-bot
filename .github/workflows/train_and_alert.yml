name: Crypto AI Hybrid v13.3 - Train & Alert

on:
  schedule:
    - cron: "*/30 * * * *"  # Every 30 minutes
  workflow_dispatch:

permissions:
  contents: write   # Allow commits/pushes
  actions: read

env:
  USE_COINGECKO_DEMO: "true"   # Use demo API; set to false for Pro
  COINGECKO_API_KEY: ""        # Optional when demo=true
  PYTHONUNBUFFERED: "1"

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Python setup
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # 3Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: |
          echo "[SETUP] Installing Python dependencies..."
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true

      # 4Ô∏è‚É£ Ensure folders exist
      - name: Ensure required folders exist
        run: |
          echo "[INIT] Ensuring models, data_cache, telemetry_logs folders exist..."
          mkdir -p models data_cache telemetry_logs
          touch models/.gitkeep data_cache/.gitkeep telemetry_logs/.gitkeep

      # 5Ô∏è‚É£ Train AI Models
      - name: Train AI Models
        run: |
          echo "[RUN] Starting AI model training..."
          python train_ai_model.py || echo "[WARN] Training script encountered a warning."

      # 6Ô∏è‚É£ Spike prediction (optional)
      - name: Run Spike Predictor
        run: |
          echo "[RUN] Running spike prediction engine..."
          if [ -f spike_predictor.py ]; then
            python spike_predictor.py || echo "[WARN] Spike predictor exited with non-zero status."
          else
            echo "[INFO] spike_predictor.py not found, skipping."
          fi

      # 7Ô∏è‚É£ Run Crypto AI Alert Logic
      - name: Run Crypto AI Alert Logic (Safe Mode)
        run: |
          echo "[RUN] Executing crypto alert logic..."
          python crypto_ai_alert_v10.py || echo "[WARN] Alert logic exited with non-zero status."

      # 8Ô∏è‚É£ Upload trained models as artifacts
      - name: Upload Trained Models
        uses: actions/upload-artifact@v4
        with:
          name: trained_models
          path: models/

      # 9Ô∏è‚É£ Upload telemetry logs as artifacts
      - name: Upload Telemetry Logs
        uses: actions/upload-artifact@v4
        with:
          name: telemetry_logs
          path: telemetry_logs/

      # üîü Cleanup telemetry (optional)
      - name: Cleanup Old Telemetry Logs
        run: |
          echo "[RUN] Cleaning up old telemetry logs..."
          if [ -f telemetry_cleanup.py ]; then
            python telemetry_cleanup.py || echo "[WARN] Telemetry cleanup skipped."
          else
            echo "[INFO] telemetry_cleanup.py not found, skipping."
          fi

      # 1Ô∏è‚É£1Ô∏è‚É£ Commit and push updated models + telemetry logs
      - name: Commit and push updated models and telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "[GIT] Committing and pushing trained models + telemetry logs..."
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions Bot"

          # Force-add ignored or binary files
          git add -f models/*.pkl telemetry_logs/*.json data_cache/* || true

          # Commit only if changes exist
          if git diff --cached --quiet; then
            echo "[INFO] No changes detected, skipping commit."
          else
            git commit -m "Auto-update: AI model + telemetry artifacts [skip ci]"
            git pull --rebase origin main || echo "[WARN] Rebase skipped or failed."
            git push origin main || echo "[WARN] Push failed (check permissions)."
          fi

      # ‚úÖ Finish
      - name: ‚úÖ Done
        run: echo "[FINISH] Crypto AI Hybrid v13.3 workflow completed successfully."
